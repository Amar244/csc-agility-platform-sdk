<?xml version="1.0" standalone="yes"?>
<project name="agility-platform-sdk" basedir="." default="help" xmlns:ivy="antlib:org.apache.ivy.ant">

	<!-- Let's keep these ant build files until dependent adapter projects are mavenized. 
	     This build prepares the dependent files adapter proects are looking for. -->
	<!-- =====================================================================
 Definitions
 ================================================================= -->
	<!-- standard properties -->
	<property name="dist.dir" value="dist" />
	<property name="ivylib" value="ivy-lib" />
	<property name="lib" value="lib" />
	<property name="iodir" value="com.servicemesh.io" />
	<property name="iolib" value="${iodir}/lib" />

	<target name="maven">
		<!--exec dir="." executable="sh">
	        <arg line="-c 'mvn clean install'" />
	    </exec-->
	</target>

	<target name="init" depends="maven" description="Downloads third party jar files needed by the projects in this repo.">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${ivylib}" />

		<ivy:settings file="ivysettings.xml" />
		<ivy:resolve file="ivy.xml" />
		<ivy:retrieve pattern="${ivylib}/[module]-[revision].[ext]" />
		<copy todir="${dist.dir}" flatten="true">
			<fileset dir="./">
				<include name="**/com.servicemesh.*.jar" />
			</fileset>
		</copy>
		<copy todir="${lib}">
			<fileset dir="${ivylib}">
				<include name="cobertura-2.1.1.jar" />
				<include name="powermock-mockito-1.6.3-full.jar" />
				<include name="servlet-api-2.5-6.1.14.jar" />
			</fileset>
		</copy>
		<move file="${ivylib}/powermock-mockito-release-full-1.6.3.jar" tofile="${lib}/powermock-mockito-1.6.3-full.jar" />
		<move file="${ivylib}/agility-api-docs-annotation-1.1.3.jar" tofile="${lib}/agility-athena-1.0.4-bin.jar" />

		<copy todir="${iolib}">
			<fileset dir="${ivylib}">
				<include name="httpasyncclient-4.1.jar" />
				<include name="httpclient-4.4.1.jar" />
				<include name="httpcore-4.4.1.jar" />
				<include name="httpcore-nio-4.4.1.jar" />
			</fileset>
		</copy>
	</target>

	<target name="clean" description="Deletes all generated artifacts.">
		<delete dir="${dist.dir}" />
		<delete dir="${ivylib}" />
		<delete dir="${lib}" />
		<delete dir="${iodir}" />
		<delete dir="javadoc" />
	</target>

</project>