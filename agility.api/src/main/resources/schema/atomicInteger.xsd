<?xml version="1.0" encoding="UTF-8"?>

<!--
COPYRIGHT (C) 2008-2016 SERVICEMESH, INC.  ALL RIGHTS RESERVED.  CONFIDENTIAL AND PROPRIETARY. 
 
ALL SOFTWARE, INFORMATION AND ANY OTHER RELATED COMMUNICATIONS (COLLECTIVELY, "WORKS") ARE CONFIDENTIAL AND PROPRIETARY 
INFORMATION THAT ARE THE EXCLUSIVE PROPERTY OF SERVICEMESH.     ALL WORKS ARE PROVIDED UNDER THE APPLICABLE AGREEMENT OR 
END USER LICENSE AGREEMENT IN EFFECT BETWEEN YOU AND SERVICEMESH.  UNLESS OTHERWISE SPECIFIED IN THE APPLICABLE AGREEMENT, 
ALL WORKS ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, 
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.  ALL USE, DISCLOSURE AND/OR 
REPRODUCTION OF WORKS NOT EXPRESSLY AUTHORIZED BY SERVICEMESH IS STRICTLY PROHIBITED.
-->

<xsd:schema targetNamespace="http://servicemesh.com/agility/api"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="qualified"
   xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="2.0" jaxb:extensionBindingPrefixes="xjc annox"
   xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
   xmlns:annox="http://annox.dev.java.net" 
   xmlns:a="http://annox.dev.java.net/com.servicemesh.agility.tools.annotation"
   xmlns:jl="http://annox.dev.java.net/java.lang"
   xmlns:jxml="http://annox.dev.java.net/javax.xml.bind.annotation"
   xmlns:agility="http://servicemesh.com/agility/api">

   <xsd:include schemaLocation="item.xsd" />
   
   <xsd:complexType name="AtomicInteger">
   
      <xsd:annotation>
         <xsd:appinfo>
            <annox:annotate target="class">
               <jxml:XmlRootElement>
                  <jxml:name>AtomicInteger</jxml:name>
               </jxml:XmlRootElement>
               <a:ApiModel comment = "Allows for a user to retrieve a counter that corresponds to an incremented identifier each time it is called." 
                           description = "stub" 
                           externalDocLink = "" />
            </annox:annotate>
         </xsd:appinfo>
      </xsd:annotation>

      <xsd:complexContent>
         <xsd:extension base="agility:Item">
            <xsd:sequence>
            
            <xsd:element name="pkey" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="pkey stands for primary key. Is the unique identifier associated to an AtomicInteger." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
              <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="The value associated with the AtomicInteger identified by pkey." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="base" type="xsd:byte" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="The base value is to be retrieved in. Base 2 through 36 are supported." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="width" type="xsd:byte" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="The number of digits to display. The value will be padded to the left with 0's if necessary to reach width.  Because truncation will not occur, the value will be rendered with more than width digits when value is too large.  A width of 0 means to never show any leading 0's" />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="upperCase" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="If true, the value returned will be converted to uppercase. Otherwise, the value will be lowercase." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="minAtomicValue" type="xsd:long" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="The minimum value the field value can take on. Expressed in base 10." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="maxAtomicValue" type="xsd:long" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="The maximum value the field value can take on. Expressed in base 10." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>
               
               <xsd:element name="allowWrap" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:appinfo>
                        <annox:annotate target="field">
                           <a:ApiField comment="If true, then the value associated with the AtomicInteger identified by pkey will loop between the minAtomicValue and maxAtomicValue value. If the value field attempts to exceed a boundry an exception is thrown." />
                        </annox:annotate>
                     </xsd:appinfo>
                  </xsd:annotation>
               </xsd:element>

            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
      
   </xsd:complexType>
   
</xsd:schema>
